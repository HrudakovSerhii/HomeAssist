{
  "openapi": "3.0.0",
  "info": {
    "title": "HomeAssist API",
    "version": "1.0.0",
    "description": "API for HomeAssist email processing and management system"
  },
  "servers": [
    {
      "url": "http://localhost:4000/api",
      "description": "Development server"
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "displayName": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "username", "displayName", "isActive", "createdAt", "updatedAt", "lastLoginAt"]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "displayName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": ["username", "password", "displayName"]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["username", "password"]
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "token": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "hasActiveAccounts": {
            "type": "boolean"
          }
        },
        "required": ["success", "user", "hasActiveAccounts"]
      },
      "AddEmailAccountDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "appPassword": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "enum": ["GMAIL", "OUTLOOK", "YAHOO", "IMAP_GENERIC"]
          }
        },
        "required": ["userId", "email", "appPassword"]
      },
      "TestImapDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "appPassword": {
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "enum": ["GMAIL", "OUTLOOK", "YAHOO", "IMAP_GENERIC"]
          }
        },
        "required": ["email", "appPassword"]
      },
      "ImapTestResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["success", "message"]
      },
      "AddAccountResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "account": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "displayName": {
                "type": "string"
              },
              "accountType": {
                "type": "string",
                "enum": ["GMAIL", "OUTLOOK", "YAHOO", "IMAP_GENERIC"]
              },
              "isActive": {
                "type": "boolean"
              }
            },
            "required": ["id", "email", "displayName", "accountType", "isActive"]
          }
        },
        "required": ["success", "message", "account"]
      },
      "EmailCategory": {
        "type": "string",
        "enum": ["WORK", "PERSONAL", "FINANCE", "HEALTH", "BILLS", "RECEIPTS", "INVOICES", "STATEMENTS", "CONTRACTS", "OTHER"]
      },
      "Priority": {
        "type": "string",
        "enum": ["LOW", "MEDIUM", "HIGH", "URGENT"]
      },
      "Sentiment": {
        "type": "string",
        "enum": ["POSITIVE", "NEUTRAL", "NEGATIVE"]
      },
      "EntityType": {
        "type": "string",
        "enum": [
          "PERSON",
          "ORGANIZATION",
          "DATE",
          "TIME",
          "LOCATION",
          "EMAIL_ADDRESS",
          "PHONE_NUMBER",
          "URL",
          "AMOUNT",
          "CURRENCY",
          "INVOICE_NUMBER",
          "ACCOUNT_NUMBER",
          "PRODUCT",
          "REGION",
          "TECHNOLOGY",
          "DATE_RANGE"
        ]
      },
      "ActionType": {
        "type": "string",
        "enum": ["MEETING", "TASK", "FOLLOW_UP", "REVIEW", "NOTIFICATION", "TRACKING", "PREPARATION", "PAYMENT", "REMINDER"]
      },
      "ProcessingStatus": {
        "type": "string",
        "enum": ["PENDING", "PROCESSING", "COMPLETED", "FAILED", "SKIPPED"]
      },
      "EntityExtraction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityType"
          },
          "entityValue": {
            "type": "string"
          },
          "confidence": {
            "type": "number",
            "minimum": 0,
            "maximum": 1
          },
          "startPosition": {
            "type": "integer",
            "nullable": true
          },
          "endPosition": {
            "type": "integer",
            "nullable": true
          },
          "context": {
            "type": "string",
            "nullable": true
          }
        },
        "required": ["id", "entityType", "entityValue", "confidence"]
      },
      "ActionItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "actionType": {
            "$ref": "#/components/schemas/ActionType"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "assignedTo": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "description", "actionType", "priority", "isCompleted", "createdAt", "updatedAt"]
      },
      "ProcessedEmails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "messageId": {
            "type": "string"
          },
          "emailAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "subject": {
            "type": "string"
          },
          "fromAddress": {
            "type": "string",
            "format": "email"
          },
          "toAddresses": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "ccAddresses": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "bccAddresses": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time"
          },
          "bodyText": {
            "type": "string",
            "nullable": true
          },
          "bodyHtml": {
            "type": "string",
            "nullable": true
          },
          "processingStatus": {
            "$ref": "#/components/schemas/ProcessingStatus"
          },
          "category": {
            "$ref": "#/components/schemas/EmailCategory"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "sentiment": {
            "$ref": "#/components/schemas/Sentiment"
          },
          "summary": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "confidence": {
            "type": "number",
            "minimum": 0,
            "maximum": 1
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityExtraction"
            }
          },
          "actionItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionItem"
            }
          }
        },
        "required": ["id", "messageId", "emailAccountId", "subject", "fromAddress", "toAddresses", "receivedAt", "processingStatus", "category", "priority", "sentiment", "summary", "tags", "confidence", "createdAt", "updatedAt", "entities", "actionItems"]
      },
      "ProcessedEmailsQueryDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "default": 1
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 10
          },
          "search": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/EmailCategory"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "sentiment": {
            "$ref": "#/components/schemas/Sentiment"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityType"
          },
          "actionType": {
            "$ref": "#/components/schemas/ActionType"
          },
          "dateFrom": {
            "type": "string",
            "format": "date"
          },
          "dateTo": {
            "type": "string",
            "format": "date"
          },
          "minConfidence": {
            "type": "number",
            "minimum": 0,
            "maximum": 1
          },
          "sortBy": {
            "type": "string",
            "enum": ["createdAt", "updatedAt", "confidence", "receivedAt"],
            "default": "createdAt"
          },
          "sortOrder": {
            "type": "string",
            "enum": ["asc", "desc"],
            "default": "desc"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "minimum": 0
          },
          "page": {
            "type": "integer",
            "minimum": 1
          },
          "limit": {
            "type": "integer",
            "minimum": 1
          },
          "totalPages": {
            "type": "integer",
            "minimum": 0
          }
        },
        "required": ["total", "page", "limit", "totalPages"]
      },
      "ProcessedEmailsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "processedEmails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessedEmails"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        },
        "required": ["success", "processedEmails", "pagination"]
      },
      "FilterOptions": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailCategory"
            }
          },
          "priorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Priority"
            }
          },
          "sentiments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sentiment"
            }
          },
          "entityTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityType"
            }
          },
          "actionTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionType"
            }
          }
        },
        "required": ["categories", "priorities", "sentiments", "entityTypes", "actionTypes"]
      },
      "FilterOptionsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/FilterOptions"
          }
        },
        "required": ["success", "data"]
      },
      "UpdateActionItemDto": {
        "type": "object",
        "properties": {
          "isCompleted": {
            "type": "boolean"
          }
        },
        "required": ["isCompleted"]
      },
      "ActionItemResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ActionItem"
          }
        },
        "required": ["success", "data"]
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": ["ok"]
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "environment": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "apiPrefix": {
                "type": "string"
              }
            },
            "required": ["status", "timestamp", "environment", "version", "apiPrefix"]
          }
        },
        "required": ["success", "data"]
      },
      "LLMExecuteDto": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          "llmModel": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          "target": {
            "type": "string",
            "enum": ["local", "remote"],
            "default": "local"
          },
          "options": {
            "type": "object",
            "additionalProperties": true
          },
          "history": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                }
              },
              "required": ["role", "content"]
            }
          }
        },
        "required": ["prompt", "llmModel"]
      },
      "LLMResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "model": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "response": {
                "type": "string"
              },
              "raw": {
                "type": "object",
                "additionalProperties": true
              }
            },
            "required": ["model", "createdAt", "response", "raw"]
          }
        },
        "required": ["success", "data"]
      },
      "AppResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              },
              "environment": {
                "type": "string"
              }
            }
          }
        },
        "required": ["success", "message"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        },
        "required": ["statusCode", "message"]
      },
      "EmailAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "displayName": {
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "enum": ["GMAIL", "OUTLOOK", "YAHOO", "IMAP_GENERIC"]
          },
          "isActive": {
            "type": "boolean"
          },
          "isConnected": {
            "type": "boolean"
          },
          "lastSyncAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "email", "displayName", "accountType", "isActive", "isConnected", "createdAt", "updatedAt"]
      },
      "UserAccountsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailAccount"
            }
          }
        },
        "required": ["success", "data"]
      },
      "IngestEmailsDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "default": 5
          },
          "folder": {
            "type": "string",
            "default": "INBOX"
          },
          "since": {
            "type": "string",
            "format": "date-time"
          },
          "before": {
            "type": "string",
            "format": "date-time"
          },
          "templateName": {
            "type": "string"
          }
        },
        "required": ["userId"]
      },
      "IngestUserEmailsDto": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "default": 5
          },
          "folder": {
            "type": "string",
            "default": "INBOX"
          },
          "since": {
            "type": "string",
            "format": "date-time"
          },
          "before": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProcessEmailDto": {
        "type": "object",
        "properties": {
          "templateName": {
            "type": "string"
          }
        }
      },
      "ProcessBatchDto": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 20,
            "default": 5
          }
        }
      },
      "EmailIngestionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "fetched": {
            "type": "integer"
          },
          "stored": {
            "type": "integer"
          },
          "processed": {
            "type": "integer"
          },
          "failed": {
            "type": "integer"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "subject": {
                  "type": "string"
                },
                "processed": {
                  "type": "boolean"
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": ["success", "message", "fetched", "stored", "processed", "failed", "emails"]
      },
      "ProcessingStatusResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "processed": {
            "type": "integer"
          },
          "pending": {
            "type": "integer"
          },
          "failed": {
            "type": "integer"
          }
        },
        "required": ["total", "processed", "pending", "failed"]
      },
      "EmailIngestionStage": {
        "type": "string",
        "enum": ["CONNECTING", "FETCHING", "STORING", "PROCESSING", "COMPLETED", "FAILED"]
      },
      "EmailIngestionProgress": {
        "type": "object",
        "properties": {
          "stage": {
            "$ref": "#/components/schemas/EmailIngestionStage"
          },
          "emailAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "totalEmails": {
            "type": "integer",
            "minimum": 0
          },
          "processedEmails": {
            "type": "integer",
            "minimum": 0
          },
          "currentEmail": {
            "type": "object",
            "properties": {
              "subject": {
                "type": "string"
              },
              "from": {
                "type": "string"
              }
            },
            "required": ["subject", "from"]
          },
          "error": {
            "type": "string"
          },
          "completedSteps": {
            "type": "object",
            "properties": {
              "fetched": {
                "type": "boolean"
              },
              "stored": {
                "type": "boolean"
              },
              "processed": {
                "type": "boolean"
              }
            },
            "required": ["fetched", "stored", "processed"]
          },
          "progress": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "estimatedTimeRemaining": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": ["stage", "emailAccountId", "completedSteps", "progress"]
      },
      "WebSocketMessage": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["register", "progress"]
          },
          "data": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid",
                "description": "userId for register message"
              },
              {
                "$ref": "#/components/schemas/EmailIngestionProgress",
                "description": "progress data for progress message"
              }
            ]
          }
        },
        "required": ["type", "data"]
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "tags": ["App"],
        "summary": "Get app status",
        "responses": {
          "200": {
            "description": "App status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["Health"],
        "summary": "Get health status",
        "responses": {
          "200": {
            "description": "Health status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/add-account": {
      "post": {
        "tags": ["Auth"],
        "summary": "Add email account to user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEmailAccountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Email account added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/test-imap": {
      "post": {
        "tags": ["Auth"],
        "summary": "Test IMAP connection",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestImapDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "IMAP test result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImapTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/accounts": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get user email accounts",
        "responses": {
          "200": {
            "description": "User accounts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAccountsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data/processed-emails": {
      "get": {
        "tags": ["Data"],
        "summary": "Get processed emails with filtering and pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EmailCategory"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Priority"
            }
          },
          {
            "name": "sentiment",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Sentiment"
            }
          },
          {
            "name": "entityType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EntityType"
            }
          },
          {
            "name": "actionType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/ActionType"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "minConfidence",
            "in": "query",
            "schema": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["createdAt", "updatedAt", "confidence", "receivedAt"],
              "default": "createdAt"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Processed emails data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessedEmailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data/filter-options": {
      "get": {
        "tags": ["Data"],
        "summary": "Get available filter options",
        "responses": {
          "200": {
            "description": "Filter options",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FilterOptionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/data/emails/{emailId}/actions/{actionIndex}": {
      "patch": {
        "tags": ["Data"],
        "summary": "Update action item completion status",
        "parameters": [
          {
            "name": "emailId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "actionIndex",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateActionItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Action item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/llm/execute": {
      "post": {
        "tags": ["LLM"],
        "summary": "Execute LLM prompt",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LLMExecuteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "LLM execution result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/email/ingest": {
      "post": {
        "tags": ["Email"],
        "summary": "Manually trigger email ingestion",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestEmailsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email ingestion completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailIngestionResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/email/ingest/{userId}": {
      "post": {
        "tags": ["Email"],
        "summary": "Ingest and process emails for a specific user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestUserEmailsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email ingestion completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailIngestionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/email/status/{userId}": {
      "get": {
        "tags": ["Email"],
        "summary": "Get processing status for a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Processing status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessingStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/email/{id}/process": {
      "post": {
        "tags": ["Email"],
        "summary": "Manually process a specific email",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessEmailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emailId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/email/process/batch": {
      "post": {
        "tags": ["Email"],
        "summary": "Process batch of pending emails",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessBatchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch processing completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "processed": {
                      "type": "integer"
                    },
                    "failed": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "App",
      "description": "Application endpoints"
    },
    {
      "name": "Health",
      "description": "Health check endpoints"
    },
    {
      "name": "Auth",
      "description": "Authentication and authorization endpoints"
    },
    {
      "name": "Data",
      "description": "Email data processing endpoints"
    },
    {
      "name": "LLM",
      "description": "LLM processing endpoints"
    },
    {
      "name": "Email",
      "description": "Email processing endpoints"
    }
  ]
}
